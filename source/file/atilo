#!/data/data/com.termux/files/usr/bin/bash
#set -u -x -e

first=0

function tips() { printf "[\033[1;32m $@ \033[0m]\n";}
function warn() { printf "[\033[1;33m $@ \033[0m]\n";}
function error() { printf "[\033[1;31m $@ \033[0m]\n";}

###### 显示说明
show_help(){
tips "
atilo 0.17.12 (Bash Script)
用法:$0 [选项] [参数]

fedora \t\t 安装fedora
debian \t\t 安装debian
alpine \t\t 安装alpine
aosc \t\t 安装aosc
arch \t\t 安装arch
ubuntu \t\t 安装ubuntu
centos \t\t 安装centos
-r \t\t 删除安装的linux"
exit 0
}
###########################################

###### 删除linux
rm_linux(){
	set +e
	chmod -R 0755 ~/${CMD2} > /dev/null 2>&1
        rm -rf ~/${CMD2} > /dev/null 2>&1
        rm -f $PREFIX/bin/start${CMD2} > /dev/null 2>&1
        tips "删除${CMD2}成功"
        exit 0
}

cmd2_err(){
	warn "输入错误"
        exit 1
}
####################################


###### 检查依赖
if [ ! -e $PREFIX/bin/tar ] || [ ! -e $PREFIX/bin/wget ] || [ ! -e $PREFIX/bin/proot ] || [ ! -e $PREFIX/bin/getconf ] || [ ! -e $PREFIX/bin/curl ] || [ ! -e $PREFIX/bin/pv ];
then pkg install tar wget proot curl getconf pv -y
fi
#######################################



if [ $# = 0 ]; then show_help; fi
CMD="$1"

sh=bash
zip=pxvf
#bin=$PREFIX/bin/start${cmd}
ARCH_LIST=('arm64' 'armhf')

get_arch(){
HOST_ARCH=$(getconf LONG_BIT)
if [ $HOST_ARCH == "64" ]
then ARCH="arm64"
elif [ ${HOST_ARCH} == "32" ]
then ARCH="armhf"
else warn "未知架构 ${HOST_ARCH}\n只支持(arm64,armhf)"
fi
}

get_durl(){
if [ ${ARCH} == "arm64" ]
then url=${arm64}
elif [ ${ARCH} == "armhf" ]
then url=${armhf}
else warn "未知架构"
fi
}

#######################################

get_arch
###### linux列表
case "$1" in
	arch)
	    arm64=https://dwz.cn/SckMJeX0
	    armhf=https://dwz.cn/KCEc6ZOM

	    cmd=arch
	    zip=pzx
	    mirrors="Server = http://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/\$arch/\$repo"
	    mirrorspath="etc/pacman.d/mirrorlist"
	    attach="pacman-key --init && pacman-key --populate archlinuxarm && pacman -Syy"
	    ;;

	centos)
	      arm64=https://dwz.cn/Mef90yX4
	      armhf=https://dwz.cn/Uep6GNCx
	      cmd=centos
	      zip=Jx
	      mirrors=0
	      attach=""
	      ;;
	ubuntu)
	    curl "https://mirror.tuna.tsinghua.edu.cn/lxc-images/images/ubuntu/bionic/${ARCH}/default/" -o html.html >/dev/null 2>&1
	    time1=`sed -n '7p' html.html | cut -d'>' -f2 | cut -d'<' -f1`
	    rm html.html
	    arm64=https://mirror.tuna.tsinghua.edu.cn/lxc-images/images/ubuntu/bionic/arm64/default/${time1}rootfs.tar.xz
	    armhf=https://mirror.tuna.tsinghua.edu.cn/lxc-images/images/ubuntu/bionic/armhf/default/${time1}rootfs.tar.xz
	    cmd=ubuntu
	    zip=pJx
	    mirrors="deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports bionic main restricted universe multiverse\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports bionic-updates main restricted universe multiverse"
	    mirrorspath="etc/apt/sources.list"
	    attach="apt update"
            ;;

	fedora)
	    arm64=https://dwz.cn/Wvp5EOkT
	    armhf=https://dwz.cn/IuuOPPbu
	    cmd=fedora
	    mirrors=0
	    attach="dnf update"
	    #暂未有源
	    ;;

	debian)
	    curl "https://mirror.tuna.tsinghua.edu.cn/lxc-images/images/debian/stretch/${ARCH}/default/" -o html2.html >/dev/null 2>&1
	time2=`sed -n '7p' html2.html | cut -d'>' -f2 | cut -d'<' -f1`              
	rm html2.html
	    arm64=https://mirror.tuna.tsinghua.edu.cn/lxc-images/images/debian/stretch/arm64/default/${time2}rootfs.tar.xz
	    armhf=https://mirror.tuna.tsinghua.edu.cn/lxc-images/images/debian/stretch/armhf/default/${time2}rootfs.tar.xz
	    cmd=debian
	    zip=pJx
	    mirrors="deb http://mirrors.tuna.tsinghua.edu.cn/debian stretch main \ndeb http://mirrors.tuna.tsinghua.edu.cn/debian-security/ stretch/updates main"
	    mirrorspath="etc/apt/sources.list"
	    attach="apt update"
	    ;;

	alpine)
	   arm64=https://dwz.cn/be7vhqna
	   armhf=https://dwz.cn/Y6Cq2m3L
	    cmd=alpine
	    zip=pzx
	    sh=ash
	    mirrors="http://mirrors.tuna.tsinghua.edu.cn/alpine/v3.6/main\nhttp://mirrors.tuna.tsinghua.edu.cn/alpine/v3.6/community"
	    mirrorspath="etc/apk/repositories"
	    attach="apk update"
	    ;;

	aosc)
	    arm64=https://dwz.cn/oUnvb4Lo
	    armhf=https://dwz.cn/LopeDJvD
	    cmd=aosc
	    zip=pJx
	    mirrors=0
	    attach="apt update"
	    #自带国内源
	    ;;
##############################################################################


###### 卸载linux
	-r)
	CMD2="$2"
	if 	[ $2 = arch ] || 
		[ $2 = aosc ] || 
		[ $2 = alpine ] || 
		[ $2 = debian ] || 
		[ $2 = ubuntu ] || 
		[ $2 = fedora ] ||
		[ $2 = centos ]; 
	then rm_linux; 
	else cmd2_err;
	fi
            ;;
	*)
	warn "未知选项: '$CMD'";exit 1;
esac
#######################################

mkdir -p ~/${cmd}
cd ~/${cmd}
tips "下载镜像中..."
#####################################


###### 下载
get_durl
echo $ARCH
#......
if [ -f "${cmd}.tar.xz" ]; then
    first=1
    tips "跳过下载....."
fi
if [ "${first}" != 1 ];then
curl -L -# ${url} -o ${cmd}.tar.xz
fi
#########################################


###### 解压
tips "解压镜像中..."

if [ ${cmd} == "fedora" ];then
	tar xvf fedora.tar.xz --strip-components=1 --exclude json --exclude VERSION
	tar xpf layer.tar
	chmod +w .
	rm layer.tar
	rm fedora.tar.xz
else
	set +e
	pv ${cmd}.tar.xz |tar ${zip} 2>/dev/null
fi
###########################################


###### 设置 DNS
rm -r ~/${cmd}/etc/resolv.conf 2>/dev/null
echo "nameserver 119.29.29.29" >> ~/${cmd}/etc/resolv.conf
echo "nameserver 8.8.8.8" >> ~/${cmd}/etc/resolv.conf
echo "export USER=root" >> ~/${cmd}/etc/profile
#########################################



####### 修改源
set -e
ch_mirrors(){
	echo -e "$mirrors" > "$mirrorspath"
	tips "修改源..."
}
if [ "$mirrors" != "0" ]; then "ch_mirrors"; fi
#######################################

echo ${PREFIX}/bin/start${cmd}
###### 创建启动脚本
cat > ${PREFIX}/bin/start${cmd} <<- EOM
#!${PREFIX}/bin/bash
cd ~
unset LD_PRELOAD
command="proot"
command+=" --link2symlink"
command+=" -S ${cmd}"
command+=" -b /sdcard"
command+=" -b /dev/"
command+=" -b /proc/"
#uncomment the following line to have access to the home directory of termux
#command+=" -b /data/data/com.termux/files/home"
command+=" -w /root"
command+=" /usr/bin/env -i"
command+=" HOME=/root"
command+=" PATH=/bin:/usr/bin:/sbin:/usr/sbin"
command+=" TERM=${TERM}"
command+=" /bin/${sh} --login"
export PROOT_NO_SECCOMP=1
com="\$@"
if [ -z "\$1" ];then
    exec \$command
else
    \$command -c "\$com"
fi
EOM

chmod +x ${PREFIX}/bin/start${cmd}
#######################################

#tips "运行附加命令..."
#start${cmd} ${attach}


###### 全部完成
tips "全部完成"
tips "启动${cmd}的命令\033[1;31m start${cmd}\033[0m"
#######################################
